<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Android on Alex Pliutau</title>
    <link>/tags/android/</link>
    <description>Recent content in Android on Alex Pliutau</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Alex Pliutau</copyright>
    <lastBuildDate>Sun, 13 Mar 2016 15:11:13 +0700</lastBuildDate>
    
	<atom:link href="/tags/android/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>GoMobile: Library development for IOS/Android</title>
      <link>/gomobile-library-development-for-ios-and-android/</link>
      <pubDate>Sun, 13 Mar 2016 15:11:13 +0700</pubDate>
      
      <guid>/gomobile-library-development-for-ios-and-android/</guid>
      <description>Read full article
Cross platform development of mobile applications was quite popular back then. This approach was used by most companies in the time of mobile branch establishment. The main reasons for using this approach were simple â€“ lack of professionals in the market, slow development speed and unreasonable cost. Unfortunately, in most cases this approach did not justify itself. But why not to give that approach the second chance? Technology took a big step forward and theoretically we can get a high-quality product.</description>
    </item>
    
    <item>
      <title>Supported Go types for gomobile bind</title>
      <link>/gomobile-bind-types/</link>
      <pubDate>Mon, 25 Jan 2016 13:12:43 +0700</pubDate>
      
      <guid>/gomobile-bind-types/</guid>
      <description>gomobile bind With gomobile we can generate language bindings that make it possible to call Go functions from Java. And it&amp;rsquo;s awesome. Now you can write Android applications in Go (unfortunately without UI features and with pure SDK coverage, but I hope it will grow up from experiment to production-ready tool).
Requirements  golang 1.5+ go get golang.org/x/mobile/cmd/gomobile gomobile init Install Android SDK to ~/android-sdk-linux Install java-jdk  Playing with Go code Let&amp;rsquo;s create some artificial code and try to import it into Java.</description>
    </item>
    
  </channel>
</rss>