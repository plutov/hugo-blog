<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Github on Alex Pliutau</title>
    <link>/tags/github/</link>
    <description>Recent content in Github on Alex Pliutau</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Alex Pliutau</copyright>
    <lastBuildDate>Tue, 02 Jan 2018 14:35:14 +0700</lastBuildDate>
    
	<atom:link href="/tags/github/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Year Of Commits: simple systray program in Go</title>
      <link>/year-of-commits/</link>
      <pubDate>Tue, 02 Jan 2018 14:35:14 +0700</pubDate>
      
      <guid>/year-of-commits/</guid>
      <description>Happy New Year Gophers! One of my goals for 2018 is to commit a code to GitHub every single day. So &amp;ldquo;Contributions&amp;rdquo; on GitHub will look like this:
To track this process I decided to write a Go program, which will be always in my tray, and which will show how many days in a row I committed something to Github.
Tadaa! yearofcommits
It&amp;rsquo;s a single-file command line tool using the following packages:</description>
    </item>
    
    <item>
      <title>o means open. Simple CLI tool to open repository in browser.</title>
      <link>/o_simple_cli_to_open_repo_in_browser/</link>
      <pubDate>Tue, 15 Aug 2017 23:09:17 +0700</pubDate>
      
      <guid>/o_simple_cli_to_open_repo_in_browser/</guid>
      <description>Here is my small bash function! When you run it from the terminal it opens the GitHub/BitBucket/GitLab page in your browser for the git repository you are currently in. It has a short simple name o. I find myself doing this quite a lot as I am working with multiple repositories at the same time and switching to a browser, searching for correct link, etc.
Just type o :)</description>
    </item>
    
    <item>
      <title>gh: a tiny tool to manage GitHub repositories in your GOPATH</title>
      <link>/gh_in_gopath/</link>
      <pubDate>Wed, 22 Mar 2017 15:54:14 +0700</pubDate>
      
      <guid>/gh_in_gopath/</guid>
      <description>As a Golang developer I have to clone a lot of packages/tools/etc into $GOPATH/src/github.com. Sometimes I do go get, sometimes it&amp;rsquo;s necessary to do a combination of mkdir + git clone. So to save my time I wrote a tiny function gh, that actually is the same as cd thatbut also can close repo if it doesn&amp;rsquo;t exist.
 Here it is, just add it to your ~/.bashrc:
gh() { if [[ $# -ne 2 ]]; then echo &amp;quot;USAGE: gh [user] [repo]&amp;quot; return fi GOPATH=${GOPATH:-$HOME/go} user_path=$GOPATH/src/github.</description>
    </item>
    
  </channel>
</rss>