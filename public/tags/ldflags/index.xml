<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ldflags on Alex Pliutau</title>
    <link>/tags/ldflags/</link>
    <description>Recent content in Ldflags on Alex Pliutau</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Alex Pliutau</copyright>
    <lastBuildDate>Tue, 01 Mar 2016 10:18:54 +0700</lastBuildDate>
    
	<atom:link href="/tags/ldflags/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Optimize Go binary size</title>
      <link>/optimize-go-binary-size/</link>
      <pubDate>Tue, 01 Mar 2016 10:18:54 +0700</pubDate>
      
      <guid>/optimize-go-binary-size/</guid>
      <description>~21MB Well, I found yesterday that LogPacker Daemon weights about 21MB. This application is written in Go language, it&amp;rsquo;s really doing a lot of things, has built-in connectors to different Data-Storages, has Cluster solution inside, etc.
Some people are complaining about huge size of Go compiled binaries. But it makes sence, Go includes debugging information into binary for GDB.
go build logpacker_daemon.go &amp;amp;&amp;amp; du -h logpacker_daemon 21M	logpacker_daemon  ~15MB We distribute this binary to our customers, and they do not need to debug this tool, so I decided to turn off it.</description>
    </item>
    
  </channel>
</rss>