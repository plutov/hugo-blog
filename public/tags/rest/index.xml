<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rest on Alex Pliutau</title>
    <link>/tags/rest/</link>
    <description>Recent content in Rest on Alex Pliutau</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Alex Pliutau</copyright>
    <lastBuildDate>Sun, 08 Oct 2017 14:48:53 +0700</lastBuildDate>
    
	<atom:link href="/tags/rest/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Benchmarking gRPC&#43;Protobuf vs HTTP&#43;JSON in Go</title>
      <link>/benchmark-grpc-protobuf-vs-http-json/</link>
      <pubDate>Sun, 08 Oct 2017 14:48:53 +0700</pubDate>
      
      <guid>/benchmark-grpc-protobuf-vs-http-json/</guid>
      <description>Simplest possible solution for communication between services is to use JSON over HTTP. Though JSON has many obvious advantages - it’s human readable, well understood, and typically performs well - it also has its issues. In the case of internal services the structured formats, such as Google’s Protocol Buffers, are a better choice than JSON for encoding data.
gRPC uses protobuf by default, and it&amp;rsquo;s faster because it&amp;rsquo;s binary and it&amp;rsquo;s type-safe.</description>
    </item>
    
    <item>
      <title>Building REST Server with Elixir</title>
      <link>/building-rest-server-with-elixir/</link>
      <pubDate>Fri, 06 Oct 2017 13:28:45 +0700</pubDate>
      
      <guid>/building-rest-server-with-elixir/</guid>
      <description>I always wanted to try Elixir because of it&amp;rsquo;s nice Erlang ecosystem and because it&amp;rsquo;s similar to Go in a lot of points. I was thinking what I can start with, and I decided to build, yes&amp;hellip; a REST server. It took me around 1 hour to install Elixir, and build a simple REST server using maru RESTful framework.
I built a small items API using JSON and Agent as storage.</description>
    </item>
    
  </channel>
</rss>