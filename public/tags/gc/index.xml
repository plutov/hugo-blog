<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gc on Alex Pliutau</title>
    <link>/tags/gc/</link>
    <description>Recent content in Gc on Alex Pliutau</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Alex Pliutau</copyright>
    <lastBuildDate>Fri, 21 Jul 2017 15:48:14 +0700</lastBuildDate>
    
	<atom:link href="/tags/gc/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Garbage Collection in Git</title>
      <link>/git-gc/</link>
      <pubDate>Fri, 21 Jul 2017 15:48:14 +0700</pubDate>
      
      <guid>/git-gc/</guid>
      <description>To understand git garbage collector, we need to understand how branches work. Branches are just pointers to commits that move whenever a new commit is created.
Any time you do git commit --amend or git rebase a new commit object is created. But what happens to the old one? Old commit objects stick around in the datastore. The reason you donâ€™t see them is because there are no pointers to them.</description>
    </item>
    
  </channel>
</rss>