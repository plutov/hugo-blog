<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Paypal on Alex Pliutau</title>
    <link>/tags/paypal/</link>
    <description>Recent content in Paypal on Alex Pliutau</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Alex Pliutau</copyright>
    <lastBuildDate>Thu, 02 Mar 2017 11:25:19 +0700</lastBuildDate>
    
	<atom:link href="/tags/paypal/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How to separate Unit and Integration tests in Go</title>
      <link>/separate_unit_integration_tests/</link>
      <pubDate>Thu, 02 Mar 2017 11:25:19 +0700</pubDate>
      
      <guid>/separate_unit_integration_tests/</guid>
      <description>Usually integration tests take long time, because they&amp;rsquo;re doing real requests to real system. And it&amp;rsquo;s not necessary to run them every time we type go test. For example we have Golang client to work with PayPal SDK, it has some exported functions to send data to PayPal, then parse response and handle errors. So I wrote test functions to check that our client works properly with the real system, and be aware if PayPal changes response format or error codes.</description>
    </item>
    
    <item>
      <title>Go-client for PayPal API</title>
      <link>/go-client-for-paypal/</link>
      <pubDate>Thu, 21 Jan 2016 00:04:23 +0700</pubDate>
      
      <guid>/go-client-for-paypal/</guid>
      <description>Clients in Go There are official SDK libraries for PHP, Java and Python, but our service is written in GO, and in this case SDK search mostly fails. As a result we have found five projects on github, two of which seem worthily, but at the same time they have bounded functional:
 leebenson/paypal crowdmob/paypal  Contribute to Open Source So we decided to make a native client in Go with 100% API coverage.</description>
    </item>
    
  </channel>
</rss>